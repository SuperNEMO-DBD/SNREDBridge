# - Config file for the Vire package
# It defines the following variables
#  SNREDBridge_VERSION            - SNREDBridge version
#  SNREDBridge_VERSION_REVISION   - SNREDBridge version revision
#  SNREDBridge_WITH_DEVELOPER_TOOLS - SNREDBridge is built with development tools
#  SNREDBridge_INCLUDE_DIRS       - SNREDBridge include directories
#  SNREDBridge_CMAKE_CONFIG_DIR   - SNREDBridge CMake config path
#  SNREDBridge_WITH_BAYEUX_DEPENDENCY
#  SNREDBridge_INSTALL_DIR

#----------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#----------------------------------------------------------------------

message(STATUS "[info] SNREDBridgeConfig.cmake: Entering...")

# - Core API version
set(SNREDBridge_VERSION "@SNREDBridge_VERSION@")
# - Development Tag
set(SNREDBridge_VERSION_REVISION "@SNREDBridge_VERSION_REVISION@")
# - SNREDBridge cmake-config path is stored to help explicit path resolution in client packages:
set(SNREDBridge_CMAKE_CONFIG_DIR "${CMAKE_CURRENT_LIST_DIR}")
set(SNREDBridge_WITH_DEVELOPER_TOOLS "@SNREDBRIDGE_WITH_DEVELOPER_TOOLS@")
set(SNREDBridge_DOCS_FOUND            "@SNREDBRIDGE_WITH_DOCS@")
set(SNREDBridge_WITH_SERVICE          "@SNREDBRIDGE_WITH_SERVICE@")
set(SNREDBridge_WITH_BAYEUX_DEPENDENCY "@SNREDBRIDGE_WITH_BAYEUX_DEPENDENCY@")

message(STATUS "[info] SNREDBridgeConfig.cmake: SNREDBridge_VERSION          = '${SNREDBridge_VERSION}'")
message(STATUS "[info] SNREDBridgeConfig.cmake: SNREDBridge_VERSION_REVISION = '${SNREDBridge_VERSION_REVISION}'")

# Component Availability

#-----------------------------------------------------------------------
# Start of CMake Generated
@PACKAGE_INIT@
# END OF CMAKE GENERATED

#-----------------------------------------------------------------------
# Setup paths that clients may need
#
message(STATUS "[info] SNREDBridgeConfig.cmake: PACKAGE_CMAKE_INSTALL_BINDIR      = '@PACKAGE_CMAKE_INSTALL_BINDIR@'")
message(STATUS "[info] SNREDBridgeConfig.cmake: PACKAGE_CMAKE_INSTALL_LIBDIR      = '@PACKAGE_CMAKE_INSTALL_LIBDIR@'")
message(STATUS "[info] SNREDBridgeConfig.cmake: PACKAGE_CMAKE_INSTALL_INCLUDEDIR  = '@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@'")
message(STATUS "[info] SNREDBridgeConfig.cmake: PACKAGE_CMAKE_INSTALL_DATAROOTDIR = '@PACKAGE_CMAKE_INSTALL_DATAROOTDIR@'")
set_and_check(SNREDBridge_INCLUDE_DIR
  "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@"
  )
message(STATUS "[info] SNREDBridgeConfig.cmake: SNREDBridge_INCLUDE_DIR = '@SNREDBridge_INCLUDE_DIR@'")

set(SNREDBridge_INSTALL_DIR  "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")
set(SNREDBridge_INCLUDE_DIRS "${SNREDBridge_INCLUDE_DIR}" )
if (SNREDBridge_WITH_BAYEUX_DEPENDENCY)
  list(APPEND SNREDBridge_INCLUDE_DIRS "${Bayeux_INCLUDE_DIRS}" )
endif()

#-----------------------------------------------------------------------
# Handle paths/targets for third party deps here...

if (SNREDBridge_WITH_BAYEUX_DEPENDENCY)
  # - Bayeux
  # Our main dependency is Bayeux, and this will supply the main third
  # party deps for SNREDBridge as well
  set(SNREDBridge_Bayeux_VERSION @SNREDBridge_BAYEUX_VERSION@)
  set(Bayeux_DIR @Bayeux_CMAKE_CONFIG_DIR@)
  message(STATUS "[info] SNREDBridgeConfig.cmake: Searching Bayeux ${SNREDBridge_Bayeux_VERSION} from ${Bayeux_DIR}...")
  find_package(Bayeux ${SNREDBridge_Bayeux_VERSION} EXACT REQUIRED NO_MODULE)
	message(STATUS "[info] SNREDBridgeConfig.cmake: SNREDBridge_Bayeux_VERSION          = ${SNREDBridge_Bayeux_VERSION}")
endif()
message(STATUS "[info] SNREDBridgeConfig.cmake: SNREDBridge_Bayeux_VERSION  = ${SNREDBridge_Bayeux_VERSION}")

# - More boost
set(Boost_NO_BOOST_CMAKE ON)
set(SNREDBridge_Boost_VERSION @SNREDBridge_Boost_VERSION@)
message(STATUS "[info] SNREDBridgeConfig.cmake: Searching Boost ${SNREDBridge_Boost_VERSION}...")
set(SNREDBridge_BOOST_COMPONENTS @SNREDBRIDGE_BOOST_COMPONENTS@)
find_package(Boost @SNREDBridge_Boost_VERSION@ REQUIRED
  ${SNREDBridge_BOOST_COMPONENTS}
  )
message(STATUS "[info] SNREDBridgeConfig.cmake: SNREDBridge_Boost_VERSION   = ${SNREDBridge_Boost_VERSION}")

#-----------------------------------------------------------------------
# Include the file listing all the imported targets.
# This is installed in the same location as us...
#
if(NOT SNREDBridge_TARGETS_LOADED)
  include("${CMAKE_CURRENT_LIST_DIR}/SNREDBridgeTargets.cmake")
  set(SNREDBridge_TARGETS_LOADED 1)
endif()

#-----------------------------------------------------------------------
# Documentation - loaded optionally as it's only present if docs were
# built
#
#include("${CMAKE_CURRENT_LIST_DIR}/SNREDBridgeDocs.cmake" OPTIONAL)
check_required_components(SNREDBridge)

message(STATUS "[info] SNREDBridgeConfig.cmake: Exiting.")

# - end
